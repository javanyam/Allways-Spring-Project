<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
						
<mapper namespace="com.springlec.base.dao.customerMypageDao">

	<select id="mypageDao" resultType="com.springlec.base.model.customerUserinfoDto">
		select customerPw, customerName, customerGender, customerPhone, customerBirthday, customerPostcode, customerAddress, customerAddressDetail from customer where customerId = #{customerId} 
	</select>
	
	<select id="userEmailDao" resultType="String">
		select customerEmail from customer where customerId = #{customerId}
	</select>

	<update id="updateDao">
		update customer set customerPw = #{customerPw}, customerName = #{customerName}, customerGender = #{customerGender}, customerPhone = #{customerPhone}, customerEmail = #{customerEmail}, customerBirthday = #{customerBirthday}, customerPostcode = #{customerPostcode}, customerAddress = #{customerAddress}, customerAddressDetail = #{customerAddressDetail}, customerUpdatedate=now() where customerId = #{customerId}
	</update>
	
	<delete id="deleteDao">
		update customer set customerDeletedate = now() where customerId = #{customerId}
	</delete>
	
	<select id="myOrderListDao" resultType="com.springlec.base.model.customerOrderListDto">
		select @rownum:=@rownum+1 AS ROWNUM, c.cakeName, o.ordersSalePrice, o.ordersQuantity, o.ordersDate 
		from orders o, cake c 
		where (@rownum:=0)=0 and o.o_customerId = #{customerId} and o.ordersStatus = '구매' and o.o_cakeId = c.cakeId order by o.ordersDate desc
	</select>

	<select id="myPointDao" resultType="com.springlec.base.model.customerMyPointDto">
		select c.cakeName, o.ordersSalePrice, o.ordersQuantity, o.ordersPoint from orders o, cake c 
		where o.o_cakeId = c.cakeId and o.o_customerId = #{customerId} and o.ordersPoint > 0
	</select>
</mapper>